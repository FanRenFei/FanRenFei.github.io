<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JS实现存在重复]]></title>
    <url>%2F2018%2F12%2F05%2FJS%2F</url>
    <content type="text"><![CDATA[给定一个整数数组，判断是否存在重复元素。 如果任何值在数组中出现至少两次，函数返回 true。如果数组中每个元素都不相同，则返回 false。 示例 1:12输入: [1,2,3,1]输出: true 示例 2:12输入: [1,2,3,4]输出: false 示例 3:12输入: [1,1,1,3,3,4,3,2,4,2]输出: true 方法 1 排序后循环遍历先对数组进行排序，然后如果存在重复的数值，那么这几个数值一定是在一起的，也就是连续的，遍历的时候，只需要对该位置和该位置的后一个位置的数值进行比较就可以，两者相等，那么直接返回 true。遍历结束不存在，则返回 false12345678var containsDuplicate = function(nums) &#123; nums.sort() for (let i = 0; i &lt; nums.length; i++) &#123; if (nums[i] == nums[i + 1]) &#123; return true &#125; &#125; return false&#125;; 方法 2 哈希表哈希表特性我就不啰嗦，思路老套路：不存在就向表中存数据，存在返回值其实总结一些算法题：存在重复字眼的。都离不开哈希表(我说大多数啊 哈 毕竟我做的也不是很多啊。)考虑一下也无妨啊，搞不好一下子就出来了呢？123456789101112var containsDuplicate = function(nums) &#123; let hasObj = new Map() for (item of nums) &#123; if (hasObj.has(item)) &#123; return true &#125; else &#123; hasObj.set(item) &#125; &#125; return false&#125;;]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>-LeetCode -算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
